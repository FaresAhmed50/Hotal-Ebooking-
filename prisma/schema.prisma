generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

model User {
  id           Int         @id @default(autoincrement())
  username     String      @db.VarChar(100)
  email        String      @unique @db.VarChar(100)
  passwordHash String      @db.VarChar(255) @map("password_hash")
  preferences  String?     @db.Text
  createdAt    DateTime    @default(now()) @map("created_at")
  role         Role        @default(user)
  bookings     Booking[]
  reviews      Review[]
  payments     Payment[]
}

model Hotel {
  id           Int         @id @default(autoincrement())
  name         String      @db.VarChar(100)
  location     String      @db.VarChar(255)
  description  String?     @db.Text
  starRating   Int?        @map("star_rating")
  amenities    String?     @db.Text
  contactInfo  String?     @map("contact_info") @db.VarChar(255)
  rooms        Room[]
  reviews      Review[]
}

model Room {
  id           Int         @id @default(autoincrement())
  hotelId      Int         @map("hotel_id")
  roomType     String      @map("room_type") @db.VarChar(50)
  price        Decimal     @db.Decimal(10, 2)
  availability Boolean     @default(true)
  features     String?     @db.Text
  hotel        Hotel       @relation(fields: [hotelId], references: [id])
  bookings     Booking[]
}

model Booking {
  id             Int         @id @default(autoincrement())
  userId         Int         @map("user_id")
  roomId         Int         @map("room_id")
  checkInDate    DateTime    @map("check_in_date") @db.Date
  checkOutDate   DateTime    @map("check_out_date") @db.Date
  totalPrice     Decimal     @map("total_price") @db.Decimal(10, 2)
  bookingStatus  String      @map("booking_status") @db.VarChar(50)
  timestamp      DateTime    @default(now())
  user           User        @relation(fields: [userId], references: [id])
  room           Room        @relation(fields: [roomId], references: [id])
  payment        Payment?
}

model Review {
  id           Int         @id @default(autoincrement())
  userId       Int         @map("user_id")
  hotelId      Int         @map("hotel_id")
  rating       Int
  comment      String?     @db.Text
  timestamp    DateTime    @default(now())
  user         User        @relation(fields: [userId], references: [id])
  hotel        Hotel       @relation(fields: [hotelId], references: [id])
}

model Payment {
  id             Int         @id @default(autoincrement())
  bookingId      Int         @map("booking_id") @unique
  userId         Int         @map("user_id")
  amount         Decimal     @db.Decimal(10, 2)
  paymentMethod  String      @map("payment_method") @db.VarChar(50)
  paymentStatus  String      @map("payment_status") @db.VarChar(50)
  timestamp      DateTime    @default(now())
  user           User        @relation(fields: [userId], references: [id])
  booking        Booking     @relation(fields: [bookingId], references: [id])
}